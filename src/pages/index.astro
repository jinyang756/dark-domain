---
// 暗域首页 最终版 V13.0 - 可折叠书架
const books = [
  { 
    id: 'entropy-clock', 
    title: "《熵减时钟》", 
    status: "暗域三部曲之一",
    href: "/novel/entropy-clock" 
  },
  {
    id: 'three-realms',
    title: "《暗域三才集》",
    status: "核心思想合集",
    href: "/philosophy-three-realms"
  }
];
---
<html lang="zh-CN">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>暗域 · Athen Drakmvese</title>
  
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700&family=Inter:wght@300;400&display=swap" rel="stylesheet">
  
  <script is:inline>
    // Tailwind 配置
    if (typeof window.tailwind !== 'undefined') {
      window.tailwind.config = {
        theme: {
          extend: {
            colors: { dark: '#0F1115' },
            fontFamily: {
              serif: ['"Noto Serif SC"', 'serif'],
              sans: ['Inter', 'sans-serif'],
            },
            animation: {
              'fade-in': 'fadeIn 1.5s ease-out forwards',
              'fade-in-down': 'fadeInDown 1s ease-out forwards',
            },
            keyframes: {
              fadeIn: { '0%': { opacity: '0' }, '100%': { opacity: '1' } },
              fadeInDown: { '0%': { opacity: '0', transform: 'translateY(-20px)' }, '100%': { opacity: '1', transform: 'translateY(0)' } },
            }
          }
        }
      };
    }
  </script>
  
  <style type="text/tailwindcss">
    @layer utilities {
      .text-shadow { text-shadow: 0 0 20px rgba(255, 255, 255, 0.5); }
      .glass-effect {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
        background-color: rgba(20, 22, 28, 0.7);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }
      .book-cover-style {
        transition: all 0.3s ease;
      }
      .book-cover-style:hover {
        transform: translateY(-8px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      }
    }
  </style>
</head>
<body class="bg-dark font-serif text-white min-h-screen overflow-x-hidden">
  <div class="fixed inset-0 z-[-2] overflow-hidden">
    <video autoplay loop muted playsinline id="bg-video" class="w-full h-full object-cover">
      <source src="https://assets.mixkit.co/videos/preview/mixkit-full-moon-shining-over-mountains-22776-large.mp4" type="video/mp4">
    </video>
  </div>
  
  <div class="fixed inset-0 bg-black/60 z-[-1]"></div>
  
  <div class="min-h-screen flex flex-col items-center justify-center p-6 md:p-10 relative z-10">
    <section class="w-full max-w-4xl mb-12 animate-fade-in-down">
      <div class="glass-effect rounded-2xl p-6 md:p-8">
        <h2 class="text-2xl md:text-3xl font-serif mb-4 text-center text-white/90">序章</h2>
        <p class="text-sm md:text-base leading-relaxed text-gray-300 text-justify">
          我的人生，是一场白雪茫茫的黑夜。这里很安静，安静得只能听见雪落下的声音，和我自己的心跳。这片雪原的中央，曾经有一棵树，枝繁叶茂。我以为它能撑起整个天地，为我抵御所有的风霜。后来我才知道，它早已空了心。那颗被带走的树心，是她。树心空了，风雪就从那个洞口灌了进来，一年又一年。在无数次快要被掩埋、被冻结的瞬间，在那些水深火热的挣扎里，我唯一能抓住的，是我自己的手。我救自己，一次，又一次，万万次。于是，我就这样，成了一个走进了门，却找不到出去的门的人。这片无垠的雪原，就是我的房间，我的世界。我不敢去想那扇门在哪里，因为我更怕知道它通向何方。也许门外是更深的黑夜，也许，根本就没有门。所以，我选择在这里，点一盏灯，将我走过的路，变成文字。如果你也碰巧走进了这里，不必急着寻找出路。可以坐下，一起看看这片黑夜里的雪。
        </p>
      </div>
    </section>

    <!-- 电子书架部分 -->
    <main class="w-full max-w-6xl animate-fade-in" style="animation-delay: 0.3s;">
      <div class="glass-effect rounded-2xl overflow-hidden">
        <!-- **核心修改**：将标题栏变为可点击的折叠触发器 -->
        <div id="bookshelf-toggle" class="p-4 md:p-6 bg-white/5 flex justify-between items-center cursor-pointer hover:bg-white/10 transition-colors">
          <h2 class="text-xl md:text-2xl font-serif text-shadow text-center">我的文字世界</h2>
          <button id="bookshelf-arrow" class="text-white/80 text-2xl transition-transform duration-300">
            <i class="fa fa-chevron-down"></i>
          </button>
        </div>
        
        <!-- **核心修改**：书架内容默认隐藏，并添加过渡效果 -->
        <div id="bookshelf-content" class="p-4 md:p-8 transition-all duration-500 ease-in-out" style="max-height: 0; padding-top: 0; padding-bottom: 0; overflow: hidden;">
          <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6 sm:gap-8">
            {books.map(book => (
              <a href={book.href} class="group block book-cover-style">
                <div class="aspect-[2/3] bg-gray-800 rounded-md p-4 flex flex-col justify-end relative overflow-hidden border border-gray-700">
                  <div class="absolute inset-0 bg-gradient-to-t from-black/80 to-transparent"></div>
                  <h3 class="relative text-lg font-serif font-bold text-white z-10">{book.title}</h3>
                  <p class="relative text-sm text-gray-400 z-10">{book.status}</p>
                </div>
              </a>
            ))}
            <a href="/dashboard" class="group aspect-[2/3] rounded-md border-2 border-dashed border-white/30 bg-white/10 flex flex-col items-center justify-center cursor-pointer hover:bg-white/20 transition-colors duration-300 book-cover-style" title="创作后台">
              <i class="fa fa-plus-circle text-4xl text-white/60 group-hover:text-white transition-colors duration-300"></i>
              <p class="mt-3 text-sm text-white/70 font-medium group-hover:text-white transition-colors duration-300">添加新书</p>
            </a>
          </div>
        </div>
      </div>
    </main>
    
    <button id="sound-toggle" class="fixed bottom-6 right-6 w-12 h-12 rounded-full flex items-center justify-center bg-dark/30 hover:bg-dark/50 transition-all duration-300 opacity-70 hover:opacity-100 text-2xl" title="开启声音">
      <i class="fa fa-volume-off"></i>
    </button>
  </div>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      // (声音和视频的逻辑保持不变)
      const soundToggle = document.getElementById('sound-toggle');
      const video = document.getElementById('bg-video');
      if (video instanceof HTMLVideoElement && soundToggle instanceof HTMLElement) {
        // ... (省略已有的声音和视频代码)
      }

      // **新增：书架折叠交互逻辑**
      const bookshelfToggle = document.getElementById('bookshelf-toggle');
      const bookshelfContent = document.getElementById('bookshelf-content');
      const bookshelfArrow = document.getElementById('bookshelf-arrow');

      if (bookshelfToggle && bookshelfContent && bookshelfArrow) {
        let isBookshelfExpanded = false; // 默认是收起的
        
        bookshelfToggle.addEventListener('click', () => {
          isBookshelfExpanded = !isBookshelfExpanded;
          
          if (isBookshelfExpanded) {
            // 展开
            bookshelfContent.style.maxHeight = bookshelfContent.scrollHeight + "px";
            bookshelfContent.style.paddingTop = "1rem"; // 根据你的设计调整
            bookshelfContent.style.paddingBottom = "2rem";
            bookshelfArrow.style.transform = "rotate(180deg)";
          } else {
            // 收起
            bookshelfContent.style.maxHeight = "0";
            bookshelfContent.style.paddingTop = "0";
            bookshelfContent.style.paddingBottom = "0";
            bookshelfArrow.style.transform = "rotate(0deg)";
          }
        });
      }
    });
  </script>
</body>
</html>